{"version":3,"sources":["images/pan.png","images/fondo.png","components/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","colors","Home","theme","useTheme","mobile","useMediaQuery","breakpoints","down","classes","makeStyles","createStyles","root","background","backgroundSize","height","color","textShadow","animation","overflowY","backgroundPosition","title","textTransform","fontWeight","fontSize","right","backgroundImage","width","position","zIndex","from","borderBottomWidth","boxShadow","to","buyHereText","cursor","fontStyle","transitionProperty","transitionDuration","margin","textDecoration","display","borderBottom","transform","breadImage","useStyles","Grid","container","direction","justify","alignItems","className","src","bckg","alt","item","style","Fade","in","timeout","Typography","align","variant","pan","bottom","component","target","href","xs","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9f0f4af1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pan.2c4f09ce.png\";","module.exports = __webpack_public_path__ + \"static/media/fondo.a1b709ee.png\";","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  useMediaQuery,\r\n  useTheme,\r\n  createStyles,\r\n  Theme,\r\n  makeStyles,\r\n  Typography,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport pan from \"../images/pan.png\";\r\nimport bckg from \"../images/fondo.png\";\r\n\r\nconst colors = {\r\n  primary: \"#3C4F76\",\r\n  secondary: \"#7da1ff\",\r\n  tertiary: \"#FFA310\",\r\n  background: \"#fdfdfd\",\r\n};\r\n\r\nconst Home = () => {\r\n  const theme = useTheme();\r\n  const mobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        background: colors.background,\r\n        backgroundSize: \"400% 400%\",\r\n        height: \"100%\",\r\n        color: colors.tertiary,\r\n        textShadow: `2px 2px ${colors.secondary}`,\r\n        animation: \"$backgroundColorAnimation 3s infinite\",\r\n        overflowY: \"hidden\",\r\n      },\r\n      \"@keyframes backgroundColorAnimation\": {\r\n        \"0%\": { backgroundPosition: \"0% 34%\" },\r\n        \"50%\": { backgroundPosition: \"100% 67%\" },\r\n        \"100%\": { backgroundPosition: \"0% 34%\" },\r\n      },\r\n      title: {\r\n        textTransform: \"uppercase\",\r\n        fontWeight: \"bold\",\r\n        fontSize: mobile ? \"15vw\" : \"\",\r\n      },\r\n      \"@keyframes backgroundPhotoAnimation\": {\r\n        \"0%\": {\r\n          right: \"calc(0px - 100%)\",\r\n        },\r\n        \"70%\": {\r\n          right: 0,\r\n        },\r\n        \"80%\": {\r\n          right: -10,\r\n        },\r\n        \"100%\": {\r\n          right: 0,\r\n        },\r\n      },\r\n      backgroundImage: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        position: \"fixed\",\r\n        right: 0,\r\n        zIndex: 0,\r\n        animation: \"$backgroundPhotoAnimation 1300ms\",\r\n      },\r\n      \"@keyframes underlineAnimation\": {\r\n        from: {\r\n          borderBottomWidth: 0,\r\n          boxShadow: \"none\",\r\n        },\r\n        to: {\r\n          borderBottomWidth: \"1vh\",\r\n          boxShadow: `0px 8px 7px -9px`,\r\n        },\r\n      },\r\n      buyHereText: {\r\n        cursor: \"pointer\",\r\n        textTransform: \"uppercase\",\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"italic\",\r\n        fontSize: mobile ? \"10vw\" : \"\",\r\n        width: \"max-content\",\r\n        color: colors.primary,\r\n        textShadow: `2px 2px ${colors.secondary}`,\r\n        transitionProperty: \"textDecoration\",\r\n        transitionDuration: \"400ms\",\r\n        margin: \"0 auto\",\r\n        textDecoration: \"none\",\r\n        display: \"block\",\r\n        \"&:hover\": {\r\n          borderBottom: `solid 1vh ${colors.secondary}`,\r\n          animation: \"$underlineAnimation 400ms\",\r\n          boxShadow: `0px 8px 7px -9px`,\r\n        },\r\n      },\r\n      \"@keyframes spinningBreadAnimation\": {\r\n        \"100%\": {\r\n          transform: \"rotate(360deg)\",\r\n        },\r\n      },\r\n      breadImage: {\r\n        animation: \"$spinningBreadAnimation 2s\",\r\n      },\r\n    })\r\n  );\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      classes={{\r\n        root: classes.root,\r\n      }}\r\n    >\r\n      <img\r\n        className={classes.backgroundImage}\r\n        src={bckg}\r\n        alt=\"yellow background\"\r\n      />\r\n      <Grid item style={{ height: \"max-content\", width: \"100%\", zIndex: 999 }}>\r\n        <Fade in={true} timeout={1800}>\r\n          <div>\r\n            <Typography align=\"center\" variant=\"h1\" className={classes.title}>\r\n              Vendopan\r\n            </Typography>\r\n          </div>\r\n        </Fade>\r\n      </Grid>\r\n      <Grid item style={{ position: \"relative\" }}>\r\n        <img\r\n          className={classes.breadImage}\r\n          src={pan}\r\n          style={{ width: mobile ? \"90vw\" : \"50vw\" }}\r\n          alt=\"sourdough bread Vendopan\"\r\n        />\r\n        <div style={{ width: \"100%\", position: \"absolute\", bottom: 30 }}>\r\n          <Typography\r\n            variant=\"h2\"\r\n            align=\"center\"\r\n            component=\"a\"\r\n            className={classes.buyHereText}\r\n            target=\"_blank\"\r\n            href=\"https://clynk.me/vendopan/nOrfKT8WpN\"\r\n          >\r\n            Compra Aqui\r\n          </Typography>\r\n        </div>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        xs={12}\r\n        style={{ position: \"absolute\", bottom: 10 }}\r\n        justify=\"center\"\r\n      >\r\n        <Typography\r\n          target=\"_blank\"\r\n          href=\"https://www.gregorioospina.com\"\r\n          component=\"a\"\r\n          style={{\r\n            textDecoration: \"none\",\r\n            textShadow: \"none\",\r\n            color: colors.primary,\r\n          }}\r\n          variant=\"overline\"\r\n        >\r\n          By Grego\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from 'react';\nimport Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}